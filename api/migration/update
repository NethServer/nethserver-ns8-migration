#!/bin/bash

#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

. /usr/libexec/nethserver/api/lib/helper_functions

# read json from stdin
data=$(cat /dev/stdin)

app_id=$(echo $data | jq -r '.app')
action=$(echo $data | jq -r '.action')

# update db ////

# //// a new db key for every app to migrate?

# //// how many action values are needed? "start", "sync", "finish"? Need to have both "start" and "sync"?

set_migration_status() {
    app_id=$1
    status=$2
    ns8_leader=$(/sbin/e-smith/config getprop ns8 Host)
    /usr/bin/mkdir -p /var/lib/nethserver/agent/${ns8_leader}
    echo $status >/var/lib/nethserver/agent/${ns8_leader}/${app_id}_ns8_migration
}

# //// simplify code? (merge ifs)

if [[ "$app_id" == "nethserver-nextcloud" ]]; then
    if [[ "$action" == "start" ]]; then
        set_migration_status $app_id "syncing"

        # connect to NS7 DC //// remove
        # /usr/share/nethesis/nethserver-ns8-migration/apps/ldapproxy/export

        # if [ $? -gt 0 ]; then
        #     error "EventFailed" "See /var/log/messages"
        # fi

        /sbin/e-smith/signal-event -j nethserver-ns8-migration-export-app nextcloud

        if [ $? -gt 0 ]; then
            set_migration_status $app_id "migrating"
            error "EventFailed" "See /var/log/messages"
        fi

        set_migration_status $app_id "migrating"
    elif [[ "$action" == "sync" ]]; then
        set_migration_status $app_id "syncing"

        /sbin/e-smith/signal-event -j nethserver-ns8-migration-export-app nextcloud

        if [ $? -gt 0 ]; then
            set_migration_status $app_id "migrating"
            error "EventFailed" "See /var/log/messages"
        fi

        set_migration_status $app_id "migrating"
    elif [[ "$action" == "finish" ]]; then
        set_migration_status $app_id "syncing"
        /sbin/e-smith/signal-event -j nethserver-ns8-migration-migrate-app nextcloud

        if [ $? -gt 0 ]; then
            set_migration_status $app_id "migrating"
            error "EventFailed" "See /var/log/messages"
        fi

        set_migration_status $app_id "migrated"
    fi
elif [[ "$app_id" == "account-provider" ]]; then
    if [[ "$action" == "start" ]]; then
        set_migration_status $app_id "syncing"

        /sbin/e-smith/signal-event -j nethserver-ns8-migration-export-app ldapproxy

        if [ $? -gt 0 ]; then
            error "EventFailed" "See /var/log/messages"
        fi

        set_migration_status $app_id "migrating"

        # //// implement migrate script and uncomment
        # elif [[ "$action" == "finish" ]]; then
        # set_migration_status $app_id "syncing"
        # /sbin/e-smith/signal-event -j nethserver-ns8-migration-migrate-app ldapproxy
        #
        # if [ $? -gt 0 ]; then
        #     error "EventFailed" "See /var/log/messages"
        # fi
        # fi
    fi
fi

success

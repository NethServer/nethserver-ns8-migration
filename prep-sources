#!/bin/bash

#
# Build NS8 agent and NS7 UI
#

set -e

# Download ns8-core
rm -f main.tar.gz
wget https://github.com/NethServer/ns8-core/archive/refs/heads/main.tar.gz
tar xvzf main.tar.gz

# Reuse existing gobuilder-core container, to speed up builds
if ! buildah containers --format "{{.ContainerName}}" | grep -q gobuilder-core; then
    echo "Pulling Golang runtime..."
    golang_cache_path="${PWD}/.golang-cache"
    mkdir -vp "${golang_cache_path}/{mcache,bcache}"
    buildah from --name gobuilder-tmp docker.io/library/golang:1.18-alpine
    buildah run gobuilder-tmp apk add g++ gcc
    buildah config --env GOCACHE=/var/lib/misc/bcache --env GOMODCACHE=/var/lib/misc/mcache gobuilder-tmp
    buildah commit --rm gobuilder-tmp gobuilder-image
    buildah from --name gobuilder-core \
        -v "${golang_cache_path}:/var/lib/misc:z" \
        -v "${PWD}/ns8-core-main/core:/usr/src/core:z" \
        localhost/gobuilder-image
fi

# Build the agent
buildah run gobuilder-core sh -c "cd /usr/src/core/agent && CGO_ENABLED=0 go build -v ."
# Copy out the binary
buildah run gobuilder-core sh -c "cd /usr/src/core/agent; cat agent" > agent

# Build UI
NODE_OPTIONS="--openssl-legacy-provider"
export NODE_OPTIONS
pushd ui
npm install
npm run build
popd

tar -C ui/dist -c -z -f nethserver-ns8-migration-cockpit.tar.gz .

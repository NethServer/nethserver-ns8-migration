#!/bin/bash

exec &>> /var/log/ns8-migration.log

MM_CONF=/var/lib/nethserver/agent/mattermost.json

# If mattermost rsync configuration is not set, install mattermost inside the NS8 cluster
if [ ! -s $MM_CONF ]; then
    response=$(ns8-action cluster import-module '{"image": "ghcr.io/nethserver/mattermost:latest", "node": 1, "volumes": ["mattermost-data"]}')
    echo $response > $MM_CONF
else
    response=$(cat $MM_CONF)
fi


# Read rsync configuration
user=$(echo $response | jq -r .data.output.credentials[0])
password=$(echo $response | jq -r .data.output.credentials[1])
address=$(echo $response | jq -r .data.output.address)
port=$(echo $response | jq -r .data.output.port)

# White for rsync server
while ! nc -z $address $port
do
    sleep 1
done

# Sync files: --owner --group --chown=2000:2000 are needed to map data for the mattermost user
RSYNC_PASSWORD=$password rsync -vtr --owner --group --chown=2000:2000 --delete --progress /var/lib/nethserver/mattermost/data/ rsync://$user@$address:$port/data/volumes/mattermost-data/

# Create database dump
su - postgres -c "scl enable rh-postgresql12 -- pg_dump --port 55434 mattermost > /var/lib/nethserver/mattermost/backup/dump.sql"
RSYNC_PASSWORD=$password rsync -vtr /var/lib/nethserver/mattermost/backup/dump.sql rsync://$user@$address:$port/data/state/restore/

# Copy original config
RSYNC_PASSWORD=$password rsync -vtr /opt/mattermost/config/config.json rsync://$user@$address:$port/data/state/

rm -f /var/lib/nethserver/mattermost/backup/dump.sql

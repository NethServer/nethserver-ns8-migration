#!/bin/bash

#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

set -e

# Read nsdc props
IFS=$'\t' read -r provision_type ipaddress < <( /sbin/e-smith/config printjson nsdc | \
    jq -r '.props | [.ProvisionType, .IpAddress] | join("\t") ' )

# Read sssd props
IFS=$'\t' read -r nbdomain realm svcuser svcpass < <( /sbin/e-smith/config printjson sssd | \
    jq -r '.props | [.Workgroup, .Realm, .BindDN, .BindPassword] | join("\t") ' )

# Trim @realm suffix from svcuser
svcuser="${svcuser%%@*}"

# Generate import.env
cat - >import.env <<EOF
HOSTNAME=$(< /var/lib/machines/nsdc/etc/hostname)
IPADDRESS=${ipaddress:?}
PROVISION_TYPE=${provision_type:-unknown}
NBDOMAIN=${nbdomain:?}
REALM=${realm:?}
SVCUSER=${svcuser}
SVCPASS=${svcpass}
EOF

# Send import.env
rsync -i import.env "${RSYNC_ENDPOINT:?}"/data/state/import.env

# Send sysvol contents
rsync -ai /var/lib/machines/nsdc/var/lib/samba/sysvol/ "${RSYNC_ENDPOINT}"/data/volumes/data/sysvol/

# Generate .export files, like the pre-backup event handler of NSDC does
# shellcheck disable=SC2016
nsdc-run -e -- sh -c 'tdbbackup -s .export $(find /var/lib/samba/ -name "*.[t,l]db" -not -name netlogon_creds_cli.tdb)'

# Send .export, *.pem files, secrets encryption key, dns list...
rsync -mtri \
    --exclude="sysvol/" \
    --exclude="*.tdb" \
    --exclude="*.ldb" \
    --exclude="*.bak" \
    /var/lib/machines/nsdc/var/lib/samba/ "${RSYNC_ENDPOINT}"/data/volumes/data/

# Clean up .export files
nsdc-run -e -- find /var/lib/samba/ -name "*.export" -delete

if [[ "${MIGRATE_ACTION}" != "finish" ]]; then
    exit 0
fi

# Remove temporary external user domain
ns8-action --attach cluster remove-external-domain "$(printf '{"domain":"%s"}' "${realm,,}")" || :

# Commit DC migration
rsync -v "${RSYNC_ENDPOINT}"/terminate

# Wait until the import-module task has completed
ns8-action --attach wait "${IMPORT_TASK_ID}"

# Stop local AD provider (nsdc) and disable it permanently
/sbin/e-smith/config setprop nsdc status disabled
systemctl disable --now nsdc || :

# Stop SSSD service and disable it permanently
/sbin/e-smith/config setprop sssd status disabled
systemctl disable --now sssd || :
